(dp1
S'output'
p2
S"<type 'exceptions.TypeError'> 'Storage' object is not callable"
p3
sS'layer'
p4
S'/home/ranganath/Downloads/web2py/applications/Policy_server/controllers/default.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n# this file is released under public domain and you can use without limitations\n\n#########################################################################\n## This is a sample controller\n## - index is the default action of any application\n## - user is required for authentication and authorization\n## - download is for downloading files uploaded in the db (does streaming)\n## - call exposes all registered services (none by default)\n#########################################################################\n\n\ndef index():\n    """\n    example action using the internationalization operator T and flash\n    rendered by views/default/index.html or views/generic.html\n\n    if you need a simple wiki simply replace the two lines below with:\n    return auth.wiki()\n    """\n    response.flash = T("Welcome to web2py!")\n    return dict(message=T(\'Hello World\'))\n\nimport os\nimport subprocess\nimport MySQLdb\n\n\nmachine = "localhost";\ndb_username="root";\ndb_password="21061994";\n\ndef page():\n    connection = MySQLdb.connect(host=machine,user=db_username,passwd=db_password)\n    cur = connection.cursor()\n    query = "show databases"\n    cur.execute(query)\n    databases = cur.fetchall()\n    print databases\n    dir1 = {}\n    dat = []\n    print dir1\n    for (d,) in databases:\n                dir1[d] = {}\n                dat.append(d)\n  #              cur = connection.cursor()\n  #              query1 = "use "+d\n  #              cur.execute(query1)\n                \n                connection1 = MySQLdb.connect(host=machine,user=db_username,passwd=db_password,db=d)\n                cur = connection1.cursor()\n                query2 = "show tables"\n                cur.execute(query2)\n                tables = cur.fetchall()\n                for (t,) in tables:\n                        dir1[d][t] = []\n                        cur = connection1.cursor()\n                        query = "desc "+t +";";\n                        cur.execute(query);\n                        columns = cur.fetchall()\n                        print dir1\n                        for i in columns:\n                                dir1[d][t].append(i[0])\n    return dict(dir1=dir1,dat=dat)\n\ndef nextpage():\n        postvars = request.post_vars\n        database = postvars(\'dropbox\')\n        postkeys = postvars.keys()\n  #      for i in postkeys:\n  #              if i == "save" or i == ""\n        return dict(database=database)\n\n\n\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login\n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    http://..../[app]/default/user/manage_users (requires membership in\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    """\n    return dict(form=auth())\n\nresponse._vars=response._caller(nextpage)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/home/ranganath/Downloads/web2py/gluon/restricted.py", line 217, in restricted\n    exec ccode in environment\n  File "/home/ranganath/Downloads/web2py/applications/Policy_server/controllers/default.py", line 93, in <module>\n  File "/home/ranganath/Downloads/web2py/gluon/globals.py", line 385, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/ranganath/Downloads/web2py/applications/Policy_server/controllers/default.py", line 68, in nextpage\n    database = postvars(\'dropbox\')\nTypeError: \'Storage\' object is not callable\n'
p11
s.